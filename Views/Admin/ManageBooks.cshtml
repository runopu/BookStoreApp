@model IEnumerable<BookStoreApp.Models.Book>

@{
    ViewData["Title"] = "Manage Books";
}

<h2 class="page-title">Manage Books</h2>
<!-- Success/Error Messages -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<!-- Add New Book Button -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createBookModal">
    Add New Book
</button>

<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Price</th>
                <th>Cover Image</th>
                <th>Description</th>
                <th>Publication Date</th>
                <th>Genre</th>
                <th>Stock Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Model)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>$@book.Price</td>
                    <td>
                        <img src="@book.CoverImageUrl" alt="Book Cover" class="cover-image" />
                    </td>
                    <td>@book.Description</td>
                    <td>@book.PublicationDate.ToString("yyyy-MM-dd")</td>
                    <td>@book.Genre</td>
                    <td>@book.StockQuantity</td>
                    <td>
                        <button type="button" class="button edit-button" data-bs-toggle="modal" data-bs-target="#editBookModal"
                                data-book-id="@book.Id" data-book-title="@book.Title" data-book-author="@book.Author"
                                data-book-price="@book.Price" data-book-description="@book.Description" data-book-genre="@book.Genre"
                                data-book-stock="@book.StockQuantity">
                            Edit
                        </button>
                        <a href="@Url.Action("DeleteBook", "Admin", new { id = book.Id })"
                           class="button delete-button"
                           onclick="return confirmDelete();">Delete</a>
                        <button type="button" class="button stock-button" data-bs-toggle="modal" data-bs-target="#updateStockModal" data-book-id="@book.Id" data-book-title="@book.Title" data-stock-quantity="@book.StockQuantity">Update Stock</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<!-- Create Book Modal -->
<div class="modal fade" id="createBookModal" tabindex="-1" aria-labelledby="createBookModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createBookModalLabel">Add New Book</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form action="@Url.Action("NewBook", "Admin")" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="form-group">
                        <label for="Title">Title</label>
                        <input type="text" class="form-control" id="Title" name="Title" required />
                    </div>
                    <div class="form-group">
                        <label for="Author">Author</label>
                        <input type="text" class="form-control" id="Author" name="Author" required />
                    </div>
                    <div class="form-group">
                        <label for="Price">Price</label>
                        <input type="number" step="0.01" class="form-control" id="Price" name="Price" required />
                    </div>
                    <div class="form-group">
                        <label for="CoverImageUrl">Cover Image URL</label>
                        <input type="url" class="form-control" id="CoverImageUrl" name="CoverImageUrl" placeholder="Enter the cover image URL" />
                    </div>
                    <div class="form-group">
                        <label for="StockQuantity">Stock Quantity</label>
                        <input type="number" class="form-control" id="StockQuantity" name="StockQuantity" required />
                    </div>
                    <div class="form-group">
                        <label for="Genre">Genre</label>
                        <input type="text" class="form-control" id="Genre" name="Genre" required />
                    </div>
                    <div class="form-group">
                        <label for="Description">Description</label>
                        <textarea class="form-control" id="Description" name="Description" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Update Stock Modal -->
<div class="modal fade" id="updateStockModal" tabindex="-1" aria-labelledby="updateStockModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" action="@Url.Action("UpdateStockQuantity", "Admin")">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateStockModalLabel">Update Stock Quantity</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="bookId" name="Id" />
                    <div class="mb-3">
                        <label for="bookTitle" class="form-label">Book Title</label>
                        <input type="text" id="bookTitle" class="form-control" readonly />
                    </div>
                    <div class="mb-3">
                        <label for="stockQuantity" class="form-label">Stock Quantity</label>
                        <input type="number" id="stockQuantity" name="StockQuantity" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Book Modal -->
<div class="modal fade" id="editBookModal" tabindex="-1" aria-labelledby="editBookModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" action="@Url.Action("UpdateBook", "Admin")">
                <div class="modal-header">
                    <h5 class="modal-title" id="editBookModalLabel">Edit Book</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="bookId" name="Id" />

                    <div class="mb-3">
                        <label for="bookTitle" class="form-label">Book Title</label>
                        <input type="text" id="bookTitle" name="Title" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="bookAuthor" class="form-label">Author</label>
                        <input type="text" id="bookAuthor" name="Author" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="bookPrice" class="form-label">Price</label>
                        <input type="number" id="bookPrice" name="Price" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="bookDescription" class="form-label">Description</label>
                        <textarea id="bookDescription" name="Description" class="form-control" rows="3"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="bookGenre" class="form-label">Genre</label>
                        <input type="text" id="bookGenre" name="Genre" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="bookStock" class="form-label">Stock Quantity</label>
                        <input type="number" id="bookStock" name="StockQuantity" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 20px;
            background-color: #f4f4f9;
        }

        .page-title {
            font-size: 1.8rem;
            text-align: center;
            margin-bottom: 20px;
            color: #333;
        }

        .table-container {
            width: 100%;
            overflow-x: auto;
        }

        .styled-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-size: 1rem;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

            .styled-table thead tr {
                background-color: #007BFF;
                color: #fff;
                text-align: left;
                font-weight: bold;
            }

            .styled-table th,
            .styled-table td {
                padding: 12px 15px;
                border: 1px solid #ddd;
            }

            .styled-table tbody tr:nth-child(even) {
                background-color: #f3f3f3;
            }

            .styled-table tbody tr:hover {
                background-color: #f1f1f1;
            }

        .cover-image {
            max-width: 80px;
            max-height: 100px;
            object-fit: cover;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        /* General Button Styles */
        .button {
            text-decoration: none;
            color: #fff;
            padding: 8px 12px;
            border-radius: 5px;
            transition: background-color 0.3s ease, transform 0.2s ease;
            display: inline-block;
            font-size: 0.9rem;
            margin: 5px 0;
            cursor: pointer;
            text-align: center;
        }

        /* Edit Button Styles */
        .edit-button {
            background-color: #28a745; /* Green color for "edit" */
        }

            .edit-button:hover {
                background-color: #218838; /* Darker green on hover */
                transform: scale(1.05); /* Slightly enlarge the button on hover */
            }

            .edit-button:active {
                background-color: #1e7e34; /* Even darker green on click */
                transform: scale(0.98); /* Slightly shrink the button when clicked */
            }

        /* Delete Button Styles */
        .delete-button {
            background-color: #dc3545; /* Red color for "delete" */
        }

            .delete-button:hover {
                background-color: #c82333; /* Darker red on hover */
                transform: scale(1.05); /* Slightly enlarge the button on hover */
            }

            .delete-button:active {
                background-color: #bd2130; /* Darker red on click */
                transform: scale(0.98); /* Slightly shrink the button when clicked */
            }

        /* Add Button Styles */
        .add-button {
            background-color: #007BFF; /* Blue color for "add" */
            margin-top: 20px;
            display: block;
            text-align: center;
            max-width: 150px;
        }

            .add-button:hover {
                background-color: #0056b3; /* Darker blue on hover */
                transform: scale(1.05); /* Slightly enlarge the button on hover */
            }

            .add-button:active {
                background-color: #004085; /* Darker blue on click */
                transform: scale(0.98); /* Slightly shrink the button when clicked */
            }

        /* Stock Button Styles */
        .stock-button {
            background-color: #28a745; /* Green color for "stock" */
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .stock-button:hover {
                background-color: #218838; /* Darker green on hover */
                transform: scale(1.05); /* Slightly enlarge the button on hover */
            }

            .stock-button:active {
                background-color: #1e7e34; /* Even darker green on click */
                transform: scale(0.98); /* Slightly shrink the button when clicked */
            }

            .stock-button:focus {
                outline: none; /* Remove outline */
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Blue glow effect when focused */
            }


    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var updateStockModal = document.getElementById('updateStockModal');

            // Event listener for when the modal is triggered
            updateStockModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var bookId = button.getAttribute('data-book-id');
                var bookTitle = button.getAttribute('data-book-title');
                var stockQuantity = button.getAttribute('data-stock-quantity');

                // Populate modal fields
                updateStockModal.querySelector('#bookTitle').value = bookTitle;
                updateStockModal.querySelector('#bookId').value = bookId;
                updateStockModal.querySelector('#stockQuantity').value = stockQuantity;
            });

            // Handle form submission
            updateStockModal.querySelector('form').addEventListener('submit', function (event) {
                event.preventDefault();
                var formData = new FormData(event.target);
                var url = event.target.action;

                fetch(url, {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.text(); // Adjust based on your server response
                    })
                    .then(result => {
                        alert('Stock quantity updated successfully!');
                        location.reload(); // Refresh the page to reflect changes
                    })
                    .catch(error => {
                        alert('Error updating stock quantity: ' + error.message);
                    });
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var editBookModal = document.getElementById('editBookModal');

            // Event listener for when the modal is triggered
            editBookModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var bookId = button.getAttribute('data-book-id');
                var bookTitle = button.getAttribute('data-book-title');
                var bookAuthor = button.getAttribute('data-book-author');
                var bookPrice = button.getAttribute('data-book-price');
                var bookDescription = button.getAttribute('data-book-description');
                var bookGenre = button.getAttribute('data-book-genre');
                var bookStock = button.getAttribute('data-book-stock');

                // Populate modal fields
                editBookModal.querySelector('#bookId').value = bookId;
                editBookModal.querySelector('#bookTitle').value = bookTitle;
                editBookModal.querySelector('#bookAuthor').value = bookAuthor;
                editBookModal.querySelector('#bookPrice').value = bookPrice;
                editBookModal.querySelector('#bookDescription').value = bookDescription;
                editBookModal.querySelector('#bookGenre').value = bookGenre;
                editBookModal.querySelector('#bookStock').value = bookStock;
            });
        });
    </script>
    <script>
        function confirmDelete() {
            return confirm("Are you sure you want to delete this book?");
        }
    </script>

}
